@model GoedBezigWebApp.Models.GroupViewModels.GroupEditViewModel

@{
    ViewData["Title"] = Model.Name == null ? "Create Group" : "Edit Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var action = Model.Name == null ? "Create" : "Edit";
}

<h2>@ViewData["Title"]</h2>
<hr />

<form asp-action="@action">
    <div class="form-horizontal">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                @if (Model.Name == null)
                {
                    <input asp-for="Name" class="form-control" />
                }
                else
                { <input asp-for="Name" class="form-control" disabled />}
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <br/>
        @if (Model.Name != null)
        {
            <div class="form-group">
                <label asp-for="Motivation" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <textarea asp-for="Motivation" class="form-control" rows="3" placeholder="Geef de motivatie voor het aanmaken van de groep"></textarea>
                    <span asp-validation-for="Motivation" class="text-danger"></span>
                </div>
            </div>
            <br/>
        }
    </div>
    <div class="row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div></form>


<p><a asp-action="Index">Back to List</a></p>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
